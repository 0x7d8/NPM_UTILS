var T=Object.create;var S=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var D=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of M(e))!C.call(t,s)&&s!==r&&S(t,s,{get:()=>e[s],enumerable:!(n=H(e,s))||n.enumerable});return t};var p=(t,e,r)=>(r=t!=null?T(q(t)):{},D(e||!t||!t.__esModule?S(r,"default",{value:t,enumerable:!0}):r,t));var B=x((R,v)=>{var k=p(require("crypto")),l,y,O=()=>{(l===void 0||l>=y.length)&&(l=0,y=k.randomBytes(256));let t=y[l];return l+=1,t},J=t=>{let e=O();for(;e>=256-256%t;)e=O();return e%t},N="abcdefghijklmnopqrstuvwxyz",L="ABCDEFGHIJKLMNOPQRSTUVWXYZ",$="0123456789",A='!@#$%^&*()+_-=}{[]|:;"/?.><,`~',F=(t,e)=>{let r=t.length,n=e.length,s="";for(let o=0;o<r;o++)s+=e[J(n)];return s};v.exports.generate=t=>{t=t||{},"length"in t||(t.length=10),"number"in t||(t.numbers=!1),"symbols"in t||(t.symbols=!1),"uppercase"in t||(t.uppercase=!0),"lowercase"in t||(t.lowercase=!0),"exclude"in t||(t.exclude="");let e="";if(t.lowercase&&(e+=N),t.uppercase&&(e+=L),t.numbers&&(e+=$),t.symbols&&(typeof t.symbols=="string"?e+=t.symbols:e+=A),!e)throw new TypeError("At least one rule must be true");let r=t.exclude.length;for(;r--;)e=e.replace(t.exclude[r],"");return F(t,e)}});var f=x((V,h)=>{var u=p(require("crypto"));h.exports.encrypt=t=>{let e=u.createHash("sha256").update(String(t.key)).digest("base64").substring(0,32),r=Buffer.alloc(16,0),n=u.createCipheriv(t.algorithm,e,r),s=n.update(t.text);return s=Buffer.concat([s,n.final()]),s.toString(t.output)};h.exports.decrypt=t=>{let e=u.createHash("sha256").update(String(t.key)).digest("base64").substring(0,32),r=Buffer.alloc(16,0),n=u.createDecipheriv(t.algorithm,e,r),s=n.update(Buffer.from(t.text,"hex"));return s=Buffer.concat([s,n.final()]),s.toString(t.output)};h.exports.hash=t=>{let e;return t.output==="bytes"?e=u.createHash(t.algorithm).update(String(t.text)):e=u.createHash(t.algorithm).update(String(t.text)).digest(t.output),e}});var E=p(require("path")),j=p(require("fs"));module.exports={loadEnv(t){if(typeof t!="string")throw new TypeError("filePath must be a string");let e=j.readFileSync(E.resolve(t),"utf8"),r={};for(let n of e.split(`
`)){let s=n.split(/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg);r[s[1]]=s[2]}return r},randomNum(t,e,r){if(typeof t!="number")throw new TypeError("minimum must be a number");if(typeof e!="number")throw new TypeError("maximum must be a number");r=r!=null?r:0;let n=Math.random()*(e-t+1)+t;return Math.floor(n*10**r)/10**r},randomBol(){return Math.floor(Math.random()*2)+1===1},randomStr(t){var m,i,g,b,d,w;if(typeof t!="object")throw new TypeError("options must be an object");let e=(m=t.length)!=null?m:12,r=(i=t.numbers)!=null?i:!0,n=(g=t.symbols)!=null?g:!1,s=(b=t.uppercase)!=null?b:!0,o=(d=t.lowercase)!=null?d:!0,a=(w=t.exclude)!=null?w:"";return B().generate({length:e,numbers:r,symbols:n,uppercase:s,lowercase:o,exclude:a})},spinner:class{constructor(e){this.state=0,this.states=e!=null?e:["/","-","\\","|"]}get(){return this.state>=this.states.length&&(this.state=0),this.state++,this.states[this.state-1]}},encryptStr(t){var a,c,m,i;if(typeof t!="object")throw new TypeError("options must be an object");let e=(a=t.text)!=null?a:"Javascript Moment",r=(c=t.algorithm)!=null?c:"aes-256-cbc",n=(m=t.output)!=null?m:"hex",s=(i=t.key)!=null?i:"123unsafe";return f().encrypt({text:e,algorithm:r,output:n,key:s})},decryptStr(t){var a,c,m,i;if(typeof t!="object")throw new TypeError("options must be an object");let e=(a=t.text)!=null?a:"Javascript Moment",r=(c=t.algorithm)!=null?c:"aes-256-cbc",n=(m=t.output)!=null?m:"utf8",s=(i=t.key)!=null?i:"123unsafe";return f().decrypt({text:e,algorithm:r,output:n,key:s})},hashStr(t){var o,a,c;if(typeof t!="object")throw new TypeError("options must be an object");let e=(o=t.text)!=null?o:"Javascript Moment",r=(a=t.algorithm)!=null?a:"sha256",n=(c=t.output)!=null?c:"hex";return f().hash({text:e,algorithm:r,output:n})}};
